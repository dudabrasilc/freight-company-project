{"ast":null,"code":"var _jsxFileName = \"/Users/dudabrasilc/Development/code/phase-3/arts-by-all-react-app/src/components/DriversList.js\",\n  _s = $RefreshSig$();\nimport { Link, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport DriverCard from \"./DriverCard\";\nimport DisplayArt from \"./DisplayArt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DriversList(_ref) {\n  _s();\n  let {\n    drivers\n  } = _ref;\n  const match = useRouteMatch();\n  const driversArray = drivers.map(driver => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `Drivers/${driver.name}`,\n        children: /*#__PURE__*/_jsxDEV(DriverCard, {\n          name: driver.name,\n          artist: driver.artist,\n          image: driver.image,\n          material: d.material,\n          style: art.style,\n          year: art.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, driver.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header-list\",\n      children: \"Click an art for more details!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cards\",\n      children: artsArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(DriversList, \"zx5nH/hVPZnBbaV+fF3J0tuE528=\", false, function () {\n  return [useRouteMatch];\n});\n_c = DriversList;\nexport default DriversList;\nvar _c;\n$RefreshReg$(_c, \"DriversList\");","map":{"version":3,"names":["Link","useRouteMatch","Route","Switch","DriverCard","DisplayArt","DriversList","drivers","match","driversArray","map","driver","name","artist","image","d","material","art","style","year","id","artsArray"],"sources":["/Users/dudabrasilc/Development/code/phase-3/arts-by-all-react-app/src/components/DriversList.js"],"sourcesContent":["import { Link, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport DriverCard from \"./DriverCard\";\nimport DisplayArt from \"./DisplayArt\";\n\nfunction DriversList({ drivers }) {\n  const match = useRouteMatch()\n\n  const driversArray = drivers.map(driver => {\n    return (\n      <li key={driver.id}>\n        <Link to={`Drivers/${driver.name}`}>\n          <DriverCard name={driver.name} artist={driver.artist} image= {driver.image} material={d.material} style={art.style} year={art.year}/>\n        </Link>\n      </li>\n    )\n  })\n\n  return (\n    <>\n      <h2 className=\"header-list\">Click an art for more details!</h2>\n      <ul className=\"cards\">\n        {artsArray}\n      </ul>\n    </>\n  )\n}\n\nexport default DriversList;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACrE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AAAC;AAAA;AAEtC,SAASC,WAAW,OAAc;EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC;EAC9B,MAAMC,KAAK,GAAGP,aAAa,EAAE;EAE7B,MAAMQ,YAAY,GAAGF,OAAO,CAACG,GAAG,CAACC,MAAM,IAAI;IACzC,oBACE;MAAA,uBACE,QAAC,IAAI;QAAC,EAAE,EAAG,WAAUA,MAAM,CAACC,IAAK,EAAE;QAAA,uBACjC,QAAC,UAAU;UAAC,IAAI,EAAED,MAAM,CAACC,IAAK;UAAC,MAAM,EAAED,MAAM,CAACE,MAAO;UAAC,KAAK,EAAGF,MAAM,CAACG,KAAM;UAAC,QAAQ,EAAEC,CAAC,CAACC,QAAS;UAAC,KAAK,EAAEC,GAAG,CAACC,KAAM;UAAC,IAAI,EAAED,GAAG,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IAChI,GAHAR,MAAM,CAACS,EAAE;MAAA;MAAA;MAAA;IAAA,QAIb;EAET,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,aAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoC,eAC/D;MAAI,SAAS,EAAC,OAAO;MAAA,UAClBC;IAAS;MAAA;MAAA;MAAA;IAAA,QACP;EAAA,gBACJ;AAEP;AAAC,GArBQf,WAAW;EAAA,QACJL,aAAa;AAAA;AAAA,KADpBK,WAAW;AAuBpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
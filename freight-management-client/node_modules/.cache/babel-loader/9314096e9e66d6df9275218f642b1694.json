{"ast":null,"code":"var _jsxFileName = \"/Users/dudabrasilc/Development/code/phase-3/arts-by-all-react-app/src/components/DriversPage.js\",\n  _s = $RefreshSig$();\nimport { Route, useRouteMatch, Switch } from \"react-router-dom\";\nimport DriversList from \"./DriversList.js\";\nimport DisplayArt from \"./DisplayArt.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DriversPage(_ref) {\n  _s();\n  let {\n    drivers\n  } = _ref;\n  const match = useRouteMatch();\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/Drivers\",\n      children: /*#__PURE__*/_jsxDEV(DriversList, {\n        drivers: drivers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.url}/:`,\n      children: /*#__PURE__*/_jsxDEV(DisplayArt, {\n        drivers: drivers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(DriversPage, \"zx5nH/hVPZnBbaV+fF3J0tuE528=\", false, function () {\n  return [useRouteMatch];\n});\n_c = DriversPage;\nexport default DriversPage;\nvar _c;\n$RefreshReg$(_c, \"DriversPage\");","map":{"version":3,"names":["Route","useRouteMatch","Switch","DriversList","DisplayArt","DriversPage","drivers","match","url"],"sources":["/Users/dudabrasilc/Development/code/phase-3/arts-by-all-react-app/src/components/DriversPage.js"],"sourcesContent":["import { Route, useRouteMatch, Switch } from \"react-router-dom\";\nimport DriversList from \"./DriversList.js\";\nimport DisplayArt from \"./DisplayArt.js\";\n\nfunction DriversPage({ drivers }) {\n  const match = useRouteMatch()\n\n  return (\n    <Switch>\n      <Route exact path='/Drivers'>\n        <DriversList drivers={ drivers } />\n      </Route>\n      <Route exact path={`${match.url}/:`}>\n        <DisplayArt drivers={ drivers } />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default DriversPage;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,aAAa,EAAEC,MAAM,QAAQ,kBAAkB;AAC/D,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,UAAU,MAAM,iBAAiB;AAAC;AAEzC,SAASC,WAAW,OAAc;EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC;EAC9B,MAAMC,KAAK,GAAGN,aAAa,EAAE;EAE7B,oBACE,QAAC,MAAM;IAAA,wBACL,QAAC,KAAK;MAAC,KAAK;MAAC,IAAI,EAAC,UAAU;MAAA,uBAC1B,QAAC,WAAW;QAAC,OAAO,EAAGK;MAAS;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC7B,eACR,QAAC,KAAK;MAAC,KAAK;MAAC,IAAI,EAAG,GAAEC,KAAK,CAACC,GAAI,IAAI;MAAA,uBAClC,QAAC,UAAU;QAAC,OAAO,EAAGF;MAAS;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC5B;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEb;AAAC,GAbQD,WAAW;EAAA,QACJJ,aAAa;AAAA;AAAA,KADpBI,WAAW;AAepB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}